// Code generated by MockGen. DO NOT EDIT.
// Source: repository_interface.go

// Package repository is a generated GoMock package.
package repository

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/syukri21/mercari/service_auth/model"
)

// MockJWTRepository is a mock of JWTRepository interface.
type MockJWTRepository struct {
	ctrl     *gomock.Controller
	recorder *MockJWTRepositoryMockRecorder
}

// MockJWTRepositoryMockRecorder is the mock recorder for MockJWTRepository.
type MockJWTRepositoryMockRecorder struct {
	mock *MockJWTRepository
}

// NewMockJWTRepository creates a new mock instance.
func NewMockJWTRepository(ctrl *gomock.Controller) *MockJWTRepository {
	mock := &MockJWTRepository{ctrl: ctrl}
	mock.recorder = &MockJWTRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJWTRepository) EXPECT() *MockJWTRepositoryMockRecorder {
	return m.recorder
}

// DecodeJWTToken mocks base method.
func (m *MockJWTRepository) DecodeJWTToken(token string) (*model.CustomClaimData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DecodeJWTToken", token)
	ret0, _ := ret[0].(*model.CustomClaimData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DecodeJWTToken indicates an expected call of DecodeJWTToken.
func (mr *MockJWTRepositoryMockRecorder) DecodeJWTToken(token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DecodeJWTToken", reflect.TypeOf((*MockJWTRepository)(nil).DecodeJWTToken), token)
}

// GenerateJWTToken mocks base method.
func (m *MockJWTRepository) GenerateJWTToken(plainToken model.PlainToken, jwtGet model.JWKGet) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateJWTToken", plainToken, jwtGet)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateJWTToken indicates an expected call of GenerateJWTToken.
func (mr *MockJWTRepositoryMockRecorder) GenerateJWTToken(plainToken, jwtGet interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateJWTToken", reflect.TypeOf((*MockJWTRepository)(nil).GenerateJWTToken), plainToken, jwtGet)
}
